{
    "$schema": "https://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/dincalcilab/samurai/master/assets/schema_input.json",
    "title": "dincalcilab/samurai pipeline - params.input schema",
    "description": "Schema for the file provided with params.input",
    "type": "array",
    "items": {
        "type": "object",
        "properties": {
            "sample": {
                "type": "string",
                "pattern": "^\\S+$",
                "errorMessage": "Sample name must be provided and cannot contain spaces",
                "meta": ["id"]
            },
            "fastq_1": {
                "type": "string",
                "pattern": "^\\S+\\.f(ast)?q\\.gz$",
                "errorMessage": "FastQ file for reads 1 must be provided, cannot contain spaces and must have extension '.fq.gz' or '.fastq.gz'",
                "format": "file-path",
                "exists": true
            },
            "fastq_2": {
                "errorMessage": "FastQ file for reads 2 cannot contain spaces and must have extension '.fq.gz' or '.fastq.gz'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.f(ast)?q\\.gz$",
                        "format": "file-path",
                        "exists": true
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ]
            },
            "bam": {
                "errorMessage": "BAM file cannot contain spaces and must have extension '.bam'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.bam$",
                        "format": "file-path",
                        "exists": true
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ]
            },
            "gender": {
                "errorMessage": "Gender must be either female or male",
                "anyOf": [
                    {
                        "type": "string",
                        "enum": ["male", "female", "M", "F"]
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "meta": ["gender"]
            }
        },
        "anyOf": [{ "required": ["sample", "fastq_1"] }, { "required": ["sample", "bam"] }]
    }
}
